{"mappings":"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","sources":["<anon>",".tini-app/components/component-page.ts"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequire2169\"];\nparcelRequire.register(\"bt64Z\", function(module, exports) {\n\n$parcel$export(module.exports, \"AppComponentPageComponent\", function () { return $2cac125a472a13f8$export$86e8357a29c0b342; });\n\nvar $l73V3 = parcelRequire(\"l73V3\");\n\nvar $5B3HT = parcelRequire(\"5B3HT\");\n\nvar $ihCia = parcelRequire(\"ihCia\");\n\nvar $aPFYP = parcelRequire(\"aPFYP\");\n\nvar $94no1 = parcelRequire(\"94no1\");\n\nvar $5GozN = parcelRequire(\"5GozN\");\n\nvar $ZHozn = parcelRequire(\"ZHozn\");\n\nvar $8b9en = parcelRequire(\"8b9en\");\n\nvar $1CqOf = parcelRequire(\"1CqOf\");\n\nvar $dJr09 = parcelRequire(\"dJr09\");\n\nvar $fWxFe = parcelRequire(\"fWxFe\");\n\nvar $8L1cM = parcelRequire(\"8L1cM\");\n\nvar $90HH7 = parcelRequire(\"90HH7\");\n\nvar $iDR9r = parcelRequire(\"iDR9r\");\nvar $2cac125a472a13f8$var$Modes;\n(function(Modes) {\n    Modes[\"Article\"] = \"article\";\n    Modes[\"Component\"] = \"component\";\n    Modes[\"Soul\"] = \"soul\";\n})($2cac125a472a13f8$var$Modes || ($2cac125a472a13f8$var$Modes = {}));\nconst $2cac125a472a13f8$export$55a867530797808c = \"app-component-page\";\nlet $2cac125a472a13f8$export$86e8357a29c0b342 = class AppComponentPageComponent extends (0, $5B3HT.TiniComponent) {\n    static #_ = (()=>{\n        this.defaultTagName = $2cac125a472a13f8$export$55a867530797808c;\n    })();\n    async onCreate() {\n        // extract soul variables\n        this.soulVariablesMap = await (0, $1CqOf.extractCSSVariables)(this.buildSoulUrl(), [\n            \":host {\",\n            \"}\"\n        ]);\n        // extract component properties\n        this.componentProperties = await (0, $1CqOf.extractComponentProperties)(this.buildComponentUrl());\n    }\n    onChanges() {\n        this.nameVariants = this.buildNameVariants();\n        this.importTiniCode = this.buildImportTiniCode();\n        this.importSpecificCode = this.buildImportSpecificCode();\n        this.standaloneCode = this.buildStandaloneCode();\n        this.articleLink = this.buildArticleLink();\n        this.componentLink = this.buildComponentLink();\n        this.componentUrl = this.buildComponentUrl();\n        this.soulLink = this.buildSoulLink();\n        this.soulUrl = this.buildSoulUrl();\n    }\n    buildNameVariants() {\n        const prefix = (this.customComponentPrefix || \"tini\").toLowerCase();\n        const prefixUppercase = prefix.toUpperCase();\n        const prefixCapitalized = prefix[0].toUpperCase() + prefix.slice(1);\n        const nameCapitalized = this.name.split(\"-\").map((item)=>item[0].toUpperCase() + item.slice(1)).join(\"\");\n        const nameConst = `${prefixUppercase}_${this.name.replace(/-/g, \"_\").toUpperCase()}`;\n        const nameTag = `${prefix}-${this.name}`;\n        const nameClass = `${prefixCapitalized}${nameCapitalized}Component`;\n        return {\n            nameCapitalized: nameCapitalized,\n            nameConst: nameConst,\n            nameTag: nameTag,\n            nameClass: nameClass\n        };\n    }\n    buildStandaloneCode() {\n        return `<script src=\"https://cdn.jsdelivr.net/npm/${this.PACKAGE_PREFIX}-${this.activeSoulId}/components/${this.name}.bundle.js\"></script>`;\n    }\n    buildArticleLink() {\n        return `${this.referArticleRepoUrl}/blob/main/app/pages/${this.path}.ts`;\n    }\n    buildSoulLink() {\n        return `${this.REPO_URL}/blob/main/styles/${this.activeSoulId}/soul/${this.name}.ts`;\n    }\n    buildSoulUrl() {\n        return `${(0, $8b9en.buildGithubRawUrl)(this.REPO_URL)}/main/styles/${this.activeSoulId}/soul/${this.name}.ts`;\n    }\n    buildComponentLink() {\n        return `${this.referComponentRepoUrl}/blob/main/components/${this.name}.ts`;\n    }\n    buildComponentUrl() {\n        return `${(0, $8b9en.buildGithubRawUrl)(this.referComponentRepoUrl)}/main/components/${this.name}.ts`;\n    }\n    buildImportTiniCode() {\n        const { nameClass: nameClass } = this.nameVariants;\n        return `import {Page} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${!this.customComponentPrefix ? \"@tinijs/ui\" : this.PACKAGE_PREFIX}';\n\n@Page({\n  components: [\n    ${nameClass}, // 2. register the component\n  ]\n});\nexport class MyPage extends TiniComponent {}`;\n    }\n    buildImportSpecificCode() {\n        const { nameClass: nameClass } = this.nameVariants;\n        return `/*\n * Option I: include in your component\n */\nimport '${this.PACKAGE_PREFIX}-${this.activeSoulId}/components/${this.name}.include';\n\n/*\n * Option II: import as a shared bundle (if your bundler supports it)\n */\nimport {useComponents} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${this.PACKAGE_PREFIX}-${this.activeSoulId}';\n\nuseComponents([\n  ${nameClass}, // 2. register the component\n]);\n`;\n    }\n    async switchMode(mode) {\n        // set mode\n        this.contentMode = mode;\n        // load source code\n        if (this.contentMode === $2cac125a472a13f8$var$Modes.Component && !this.componentSourceCode) this.componentSourceCode = await (0, $dJr09.getText)(this.componentUrl);\n        else if (this.contentMode === $2cac125a472a13f8$var$Modes.Soul && !this.soulSourceCode) this.soulSourceCode = await (0, $dJr09.getText)(this.soulUrl);\n    }\n    render() {\n        return (0, $5B3HT.html)`\n      <div class=\"head\">\n        <div class=\"title-bar\">\n          <h1 class=\"title\">\n            <span>${this.titleText || \"Untitled page\"}</span>\n            <a class=\"github-link\" href=${this.articleLink} target=\"_blank\">\n              <icon-github size=\"sm\"></icon-github>\n            </a>\n          </h1>\n          <div class=\"switch-mode\">\n            <button\n              class=${(0, $5B3HT.classMap)({\n            active: this.contentMode === $2cac125a472a13f8$var$Modes.Article\n        })}\n              @click=${this.switchMode.bind(this, $2cac125a472a13f8$var$Modes.Article)}\n            >\n              Documentation\n            </button>\n            <button\n              class=${(0, $5B3HT.classMap)({\n            active: this.contentMode === $2cac125a472a13f8$var$Modes.Component\n        })}\n              @click=${this.switchMode.bind(this, $2cac125a472a13f8$var$Modes.Component)}\n            >\n              Component source\n            </button>\n            <button\n              class=${(0, $5B3HT.classMap)({\n            active: this.contentMode === $2cac125a472a13f8$var$Modes.Soul\n        })}\n              @click=${this.switchMode.bind(this, $2cac125a472a13f8$var$Modes.Soul)}\n            >\n              Soul source\n            </button>\n          </div>\n        </div>\n        <slot name=\"description\"></slot>\n      </div>\n\n      ${(0, $5B3HT.cache)(this.contentMode === $2cac125a472a13f8$var$Modes.Component ? this.renderComponentSource() : this.contentMode === $2cac125a472a13f8$var$Modes.Soul ? this.renderSoulSource() : this.renderArticle())}\n    `;\n    }\n    renderArticle() {\n        return (0, $5B3HT.html)`\n      <div class=\"body article\">\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"imports\">\n            <h2>Imports</h2>\n            <p>\n              After the\n              <a href=\"/get-started\">initial setup</a>, you can import and use\n              the component anywhere in your project. There are several way of\n              including the component:\n            </p>\n\n            <app-tabs\n              .tabItems=${this.IMPORT_TAB_ITEMS}\n              .activeName=${this.referImport}\n              @change=${({ detail: detail })=>(0, $fWxFe.mainStore).commit(\"referImport\", detail.name)}\n            >\n              <div data-tab=${(0, $ZHozn.ImportMethods).Tini}>\n                <p>\n                  The official\n                  <tini-link\n                    href=\"https://parceljs.org/features/code-splitting/#shared-bundles\"\n                    target=\"_blank\"\n                    >CLI</tini-link\n                  >\n                  provides the <code>tini use</code> command. It helps you to\n                  manage <strong>components</strong>, <strong>souls</strong> and\n                  <strong>skins</strong> under a single importing endpoint.\n                </p>\n                <app-code .code=${this.importTiniCode}></app-code>\n              </div>\n\n              <div data-tab=${(0, $ZHozn.ImportMethods).Specific}>\n                <p>The specific package only supports one soul at a time.</p>\n                <app-code .code=${this.importSpecificCode}></app-code>\n              </div>\n\n              <div data-tab=${(0, $ZHozn.ImportMethods).Standalone}>\n                <p>\n                  Include the standalone version in any HTML page from a public\n                  CDN:\n                </p>\n                <app-code .code=${this.standaloneCode}></app-code>\n                <p>\n                  <strong>Note that</strong>: this method is\n                  <em>not recommended</em> because the standalone component has\n                  the soul baked in and is usually bigger in size compares to\n                  the TS/ESM version.\n                </p>\n              </div>\n            </app-tabs>\n          </div>\n        </app-section>\n\n        <slot></slot>\n\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"api\">\n            <h2>API</h2>\n            <p>\n              For implementation detail, please see the\n              <a\n                href=\"javascript:void(0)\"\n                @click=${this.switchMode.bind(this, $2cac125a472a13f8$var$Modes.Component)}\n                >component source code</a\n              >.\n            </p>\n            <table>\n              <thead>\n                <tr>\n                  <th>Property</th>\n                  <th>Type</th>\n                  <th>Required</th>\n                  <th>Default</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${!this.componentProperties?.length ? (0, $5B3HT.nothing) : this.componentProperties.map((prop)=>(0, $5B3HT.html)`\n                        <tr>\n                          <td><code>${prop.name}</code></td>\n                          <td><code>${prop.type}</code></td>\n                          <td>${prop.isOptional ? \"\" : \"✓\"}</td>\n                          <td><code>${prop.defaultValue}</code></td>\n                        </tr>\n                      `)}\n              </tbody>\n            </table>\n          </div>\n        </app-section>\n\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"styles\">\n            <h2>Variables & parts</h2>\n            <p>\n              Please see the\n              <a href=\"/guides/customization\">Customization</a> guide for more\n              info on how to customize a component.\n            </p>\n            <p>\n              For implementation detail, please see the\n              <a\n                href=\"javascript:void(0)\"\n                @click=${this.switchMode.bind(this, $2cac125a472a13f8$var$Modes.Soul)}\n                >soul source code</a\n              >.\n            </p>\n            <h3>Variables</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Description</th>\n                  <th>Default</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${!this.soulVariablesMap?.size ? (0, $5B3HT.nothing) : (0, $5B3HT.repeat)(this.soulVariablesMap, ([key])=>key, ([, variable])=>(0, $5B3HT.html)`\n                        <tr>\n                          <td><code>${variable.key}</code></td>\n                          <td>${variable.description}</td>\n                          <td><code>${variable.value}</code></td>\n                        </tr>\n                      `)}\n              </tbody>\n            </table>\n            ${!this.partList ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n                  <h3>Parts</h3>\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Template</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      ${this.partList.map(([name, description])=>(0, $5B3HT.html)`\n                          <tr>\n                            <td><code>${name}</code></td>\n                            <td>${description}</td>\n                            <td>\n                              <code\n                                >${this.nameVariants.nameTag}::part(${name})\n                                {}</code\n                              >\n                            </td>\n                          </tr>\n                        `)}\n                    </tbody>\n                  </table>\n                `}\n          </div>\n        </app-section>\n      </div>\n\n      ${!this.prevPage && !this.nextPage ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n            <div class=\"foot\">\n              ${!this.prevPage ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n                    <tini-link .href=${this.prevPage.href}\n                      >${this.prevPage.title}</tini-link\n                    >\n                  `}\n              ${!this.nextPage ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n                    <tini-link .href=${this.nextPage.href}\n                      >${this.nextPage.title}</tini-link\n                    >\n                  `}\n            </div>\n          `}\n    `;\n    }\n    renderComponentSource() {\n        return (0, $5B3HT.html)`\n      <div class=\"body component-source\">\n        ${!this.componentSourceCode ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n              <p>\n                View on Github:\n                <a href=${this.componentLink} target=\"_blank\"\n                  >${this.componentLink}</a\n                >\n              </p>\n              <app-code .code=${this.componentSourceCode}></app-code>\n            `}\n      </div>\n    `;\n    }\n    renderSoulSource() {\n        return (0, $5B3HT.html)`\n      <div class=\"body soul-source\">\n        ${!this.soulSourceCode ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n              <p>\n                View on Github:\n                <a href=${this.soulLink} target=\"_blank\">${this.soulLink}</a>\n              </p>\n              <app-code .code=${this.soulSourceCode}></app-code>\n            `}\n      </div>\n    `;\n    }\n    static #_1 = (()=>{\n        this.styles = (0, $5B3HT.css)`.title-bar{display:flex;align-items:center;justify-content:space-between}.title-bar .title .github-link{margin-left:var(--size-space);opacity:.5}.title-bar .title .github-link:hover{opacity:1}.title-bar .switch-mode{display:flex;align-items:center;justify-content:center}.title-bar .switch-mode button{cursor:pointer;padding:var(--size-space-0_4x) var(--size-space-0_8x);font-size:var(--size-text-0_9x);border:var(--size-border) solid var(--color-primary-tint);border-right:none;color:var(--color-primary)}.title-bar .switch-mode button:first-child{border-radius:var(--size-radius) 0 0 var(--size-radius)}.title-bar .switch-mode button:last-child{border-radius:0 var(--size-radius) var(--size-radius) 0;border-right:var(--size-border) solid var(--color-primary-tint)}.title-bar .switch-mode button.active{background:var(--color-primary);color:var(--color-primary-contrast)}.body{padding-bottom:2rem}.body.article,.body.component-source,.body.soul-source{margin-top:var(--size-space-4x)}table{width:100%;border-collapse:collapse;border-spacing:0}table thead tr th{border-bottom:var(--size-border-2x) solid var(--color-background-shade)}table tbody tr td{border-bottom:1px solid var(--color-background-shade)}table th,table td{padding:var(--size-space-0_5x);text-align:left}`;\n    })();\n    constructor(...args){\n        super(...args);\n        this.PACKAGE_PREFIX = (0, $5GozN.Configurable).getOption(\"packagePrefix\");\n        this.REPO_URL = (0, $5GozN.Configurable).getOption(\"repoUrl\");\n        this.IMPORT_TAB_ITEMS = [\n            {\n                name: (0, $ZHozn.ImportMethods).Tini\n            },\n            {\n                name: (0, $ZHozn.ImportMethods).Specific\n            },\n            {\n                name: (0, $ZHozn.ImportMethods).Standalone\n            }\n        ];\n        this.contentMode = $2cac125a472a13f8$var$Modes.Article;\n        this.activeSoulId = (0, $fWxFe.mainStore).activeSoulId;\n        this.referImport = (0, $fWxFe.mainStore).referImport;\n        this.referArticleRepoUrl = this.customComponentPrefix ? this.REPO_URL : (0, $ZHozn.OFFICIAL_REPO_URL);\n        this.referComponentRepoUrl = this.customComponentPrefix ? this.REPO_URL : (0, $ZHozn.OFFICIAL_REPO_URL);\n    }\n};\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"name\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"path\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"titleText\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Array\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"partList\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"customComponentPrefix\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Object\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"prevPage\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Object\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"nextPage\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"contentMode\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"componentSourceCode\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"soulSourceCode\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"soulVariablesMap\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"componentProperties\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $ihCia.Subscribe)((0, $fWxFe.mainStore)),\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"activeSoulId\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $ihCia.Subscribe)((0, $fWxFe.mainStore)),\n    (0, $5B3HT.Reactive)()\n], $2cac125a472a13f8$export$86e8357a29c0b342.prototype, \"referImport\", void 0);\n$2cac125a472a13f8$export$86e8357a29c0b342 = (0, $l73V3.__decorate)([\n    (0, $5B3HT.Component)({\n        components: [\n            (0, $94no1.IconGithubComponent),\n            (0, $8L1cM.AppSectionComponent),\n            (0, $90HH7.AppTabsComponent),\n            (0, $iDR9r.AppCodeComponent)\n        ],\n        theming: {\n            styling: (0, $5B3HT.stylingWithBases)([\n                (0, $aPFYP.codeBases),\n                (0, $aPFYP.headingsBases),\n                (0, $aPFYP.linkBases),\n                (0, $aPFYP.textBases),\n                (0, $aPFYP.buttonBases),\n                (0, $aPFYP.commonBases)\n            ])\n        }\n    })\n], $2cac125a472a13f8$export$86e8357a29c0b342);\n\n});\n\n\n//# sourceMappingURL=text.be69170f.js.map\n","import {\n  Component,\n  TiniComponent,\n  Input,\n  Reactive,\n  html,\n  css,\n  nothing,\n  cache,\n  classMap,\n  stylingWithBases,\n  repeat,\n} from '@tinijs/core';\nimport {Subscribe} from '@tinijs/store';\nimport {\n  commonBases,\n  headingsBases,\n  linkBases,\n  textBases,\n  buttonBases,\n  codeBases,\n} from '@tinijs/ui';\nimport {IconGithubComponent} from '@tinijs/bootstrap-icons/github';\n\nimport {Configurable} from '../configurable';\nimport {OFFICIAL_REPO_URL, ImportMethods} from '../consts/main';\nimport {buildGithubRawUrl} from '../helpers/github';\nimport {\n  extractCSSVariables,\n  VariableDef,\n  extractComponentProperties,\n} from '../helpers/source';\nimport {getText} from '../helpers/http';\nimport {mainStore} from '../stores/main';\n\nimport {AppSectionComponent} from './section';\nimport {AppTabsComponent, TabItem} from './tabs';\nimport {AppCodeComponent} from './code';\n\ninterface Quicklink {\n  href: string;\n  title: string;\n}\n\nenum Modes {\n  Article = 'article',\n  Component = 'component',\n  Soul = 'soul',\n}\n\nexport const APP_COMPONENT_PAGE = 'app-component-page';\n@Component({\n  components: [\n    IconGithubComponent,\n    AppSectionComponent,\n    AppTabsComponent,\n    AppCodeComponent,\n  ],\n  theming: {\n    styling: stylingWithBases([\n      codeBases,\n      headingsBases,\n      linkBases,\n      textBases,\n      buttonBases,\n      commonBases,\n    ]),\n  },\n})\nexport class AppComponentPageComponent extends TiniComponent {\n  static readonly defaultTagName = APP_COMPONENT_PAGE;\n\n  private readonly PACKAGE_PREFIX = Configurable.getOption('packagePrefix');\n  private readonly REPO_URL = Configurable.getOption('repoUrl');\n\n  private readonly IMPORT_TAB_ITEMS: TabItem[] = [\n    {name: ImportMethods.Tini},\n    {name: ImportMethods.Specific},\n    {name: ImportMethods.Standalone},\n  ];\n\n  @Input({type: String}) name!: string;\n  @Input({type: String}) path!: string;\n  @Input({type: String}) titleText?: string;\n  @Input({type: Array}) partList?: string[][];\n  @Input({type: String}) customComponentPrefix?: string;\n  @Input({type: Object}) prevPage?: Quicklink;\n  @Input({type: Object}) nextPage?: Quicklink;\n\n  @Reactive() private contentMode: Modes = Modes.Article;\n  @Reactive() private componentSourceCode?: string;\n  @Reactive() private soulSourceCode?: string;\n  @Reactive() private soulVariablesMap?: Map<string, VariableDef>;\n  @Reactive() private componentProperties?: any[];\n\n  @Subscribe(mainStore) @Reactive() private readonly activeSoulId =\n    mainStore.activeSoulId;\n  @Subscribe(mainStore) @Reactive() private readonly referImport =\n    mainStore.referImport;\n\n  private readonly referArticleRepoUrl = this.customComponentPrefix\n    ? this.REPO_URL\n    : OFFICIAL_REPO_URL;\n  private readonly referComponentRepoUrl = this.customComponentPrefix\n    ? this.REPO_URL\n    : OFFICIAL_REPO_URL;\n\n  private nameVariants!: ReturnType<typeof this.buildNameVariants>;\n  private importTiniCode!: ReturnType<typeof this.buildImportTiniCode>;\n  private importSpecificCode!: ReturnType<typeof this.buildImportSpecificCode>;\n  private standaloneCode!: string;\n  private articleLink!: string;\n  private componentLink!: string;\n  private componentUrl!: string;\n  private soulLink!: string;\n  private soulUrl!: string;\n\n  async onCreate() {\n    // extract soul variables\n    this.soulVariablesMap = await extractCSSVariables(this.buildSoulUrl(), [\n      ':host {',\n      '}',\n    ]);\n    // extract component properties\n    this.componentProperties = await extractComponentProperties(\n      this.buildComponentUrl()\n    );\n  }\n\n  onChanges() {\n    this.nameVariants = this.buildNameVariants();\n    this.importTiniCode = this.buildImportTiniCode();\n    this.importSpecificCode = this.buildImportSpecificCode();\n    this.standaloneCode = this.buildStandaloneCode();\n    this.articleLink = this.buildArticleLink();\n    this.componentLink = this.buildComponentLink();\n    this.componentUrl = this.buildComponentUrl();\n    this.soulLink = this.buildSoulLink();\n    this.soulUrl = this.buildSoulUrl();\n  }\n\n  private buildNameVariants() {\n    const prefix = (this.customComponentPrefix || 'tini').toLowerCase();\n    const prefixUppercase = prefix.toUpperCase();\n    const prefixCapitalized = prefix[0].toUpperCase() + prefix.slice(1);\n    const nameCapitalized = this.name\n      .split('-')\n      .map(item => item[0].toUpperCase() + item.slice(1))\n      .join('');\n    const nameConst = `${prefixUppercase}_${this.name\n      .replace(/-/g, '_')\n      .toUpperCase()}`;\n    const nameTag = `${prefix}-${this.name}`;\n    const nameClass = `${prefixCapitalized}${nameCapitalized}Component`;\n    return {nameCapitalized, nameConst, nameTag, nameClass};\n  }\n\n  private buildStandaloneCode() {\n    return `<script src=\"https://cdn.jsdelivr.net/npm/${this.PACKAGE_PREFIX}-${this.activeSoulId}/components/${this.name}.bundle.js\"></script>`;\n  }\n\n  private buildArticleLink() {\n    return `${this.referArticleRepoUrl}/blob/main/app/pages/${this.path}.ts`;\n  }\n\n  private buildSoulLink() {\n    return `${this.REPO_URL}/blob/main/styles/${this.activeSoulId}/soul/${this.name}.ts`;\n  }\n\n  private buildSoulUrl() {\n    return `${buildGithubRawUrl(this.REPO_URL)}/main/styles/${\n      this.activeSoulId\n    }/soul/${this.name}.ts`;\n  }\n\n  private buildComponentLink() {\n    return `${this.referComponentRepoUrl}/blob/main/components/${this.name}.ts`;\n  }\n\n  private buildComponentUrl() {\n    return `${buildGithubRawUrl(this.referComponentRepoUrl)}/main/components/${\n      this.name\n    }.ts`;\n  }\n\n  private buildImportTiniCode() {\n    const {nameClass} = this.nameVariants;\n    return `import {Page} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${\n      !this.customComponentPrefix ? '@tinijs/ui' : this.PACKAGE_PREFIX\n    }';\n\n@Page({\n  components: [\n    ${nameClass}, // 2. register the component\n  ]\n});\nexport class MyPage extends TiniComponent {}`;\n  }\n\n  private buildImportSpecificCode() {\n    const {nameClass} = this.nameVariants;\n    return `/*\n * Option I: include in your component\n */\nimport '${this.PACKAGE_PREFIX}-${this.activeSoulId}/components/${this.name}.include';\n\n/*\n * Option II: import as a shared bundle (if your bundler supports it)\n */\nimport {useComponents} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${this.PACKAGE_PREFIX}-${this.activeSoulId}';\n\nuseComponents([\n  ${nameClass}, // 2. register the component\n]);\n`;\n  }\n\n  protected async switchMode(mode: AppComponentPageComponent['contentMode']) {\n    // set mode\n    this.contentMode = mode;\n    // load source code\n    if (this.contentMode === Modes.Component && !this.componentSourceCode) {\n      this.componentSourceCode = await getText(this.componentUrl);\n    } else if (this.contentMode === Modes.Soul && !this.soulSourceCode) {\n      this.soulSourceCode = await getText(this.soulUrl);\n    }\n  }\n\n  protected render() {\n    return html`\n      <div class=\"head\">\n        <div class=\"title-bar\">\n          <h1 class=\"title\">\n            <span>${this.titleText || 'Untitled page'}</span>\n            <a class=\"github-link\" href=${this.articleLink} target=\"_blank\">\n              <icon-github size=\"sm\"></icon-github>\n            </a>\n          </h1>\n          <div class=\"switch-mode\">\n            <button\n              class=${classMap({active: this.contentMode === Modes.Article})}\n              @click=${this.switchMode.bind(this, Modes.Article)}\n            >\n              Documentation\n            </button>\n            <button\n              class=${classMap({\n                active: this.contentMode === Modes.Component,\n              })}\n              @click=${this.switchMode.bind(this, Modes.Component)}\n            >\n              Component source\n            </button>\n            <button\n              class=${classMap({active: this.contentMode === Modes.Soul})}\n              @click=${this.switchMode.bind(this, Modes.Soul)}\n            >\n              Soul source\n            </button>\n          </div>\n        </div>\n        <slot name=\"description\"></slot>\n      </div>\n\n      ${cache(\n        this.contentMode === Modes.Component\n          ? this.renderComponentSource()\n          : this.contentMode === Modes.Soul\n          ? this.renderSoulSource()\n          : this.renderArticle()\n      )}\n    `;\n  }\n\n  private renderArticle() {\n    return html`\n      <div class=\"body article\">\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"imports\">\n            <h2>Imports</h2>\n            <p>\n              After the\n              <a href=\"/get-started\">initial setup</a>, you can import and use\n              the component anywhere in your project. There are several way of\n              including the component:\n            </p>\n\n            <app-tabs\n              .tabItems=${this.IMPORT_TAB_ITEMS}\n              .activeName=${this.referImport}\n              @change=${({detail}: CustomEvent<{name: string}>) =>\n                mainStore.commit('referImport', detail.name)}\n            >\n              <div data-tab=${ImportMethods.Tini}>\n                <p>\n                  The official\n                  <tini-link\n                    href=\"https://parceljs.org/features/code-splitting/#shared-bundles\"\n                    target=\"_blank\"\n                    >CLI</tini-link\n                  >\n                  provides the <code>tini use</code> command. It helps you to\n                  manage <strong>components</strong>, <strong>souls</strong> and\n                  <strong>skins</strong> under a single importing endpoint.\n                </p>\n                <app-code .code=${this.importTiniCode}></app-code>\n              </div>\n\n              <div data-tab=${ImportMethods.Specific}>\n                <p>The specific package only supports one soul at a time.</p>\n                <app-code .code=${this.importSpecificCode}></app-code>\n              </div>\n\n              <div data-tab=${ImportMethods.Standalone}>\n                <p>\n                  Include the standalone version in any HTML page from a public\n                  CDN:\n                </p>\n                <app-code .code=${this.standaloneCode}></app-code>\n                <p>\n                  <strong>Note that</strong>: this method is\n                  <em>not recommended</em> because the standalone component has\n                  the soul baked in and is usually bigger in size compares to\n                  the TS/ESM version.\n                </p>\n              </div>\n            </app-tabs>\n          </div>\n        </app-section>\n\n        <slot></slot>\n\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"api\">\n            <h2>API</h2>\n            <p>\n              For implementation detail, please see the\n              <a\n                href=\"javascript:void(0)\"\n                @click=${this.switchMode.bind(this, Modes.Component)}\n                >component source code</a\n              >.\n            </p>\n            <table>\n              <thead>\n                <tr>\n                  <th>Property</th>\n                  <th>Type</th>\n                  <th>Required</th>\n                  <th>Default</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${!this.componentProperties?.length\n                  ? nothing\n                  : this.componentProperties.map(\n                      prop => html`\n                        <tr>\n                          <td><code>${prop.name}</code></td>\n                          <td><code>${prop.type}</code></td>\n                          <td>${prop.isOptional ? '' : '✓'}</td>\n                          <td><code>${prop.defaultValue}</code></td>\n                        </tr>\n                      `\n                    )}\n              </tbody>\n            </table>\n          </div>\n        </app-section>\n\n        <app-section .noUsageTabs=${true}>\n          <div slot=\"content\" class=\"styles\">\n            <h2>Variables & parts</h2>\n            <p>\n              Please see the\n              <a href=\"/guides/customization\">Customization</a> guide for more\n              info on how to customize a component.\n            </p>\n            <p>\n              For implementation detail, please see the\n              <a\n                href=\"javascript:void(0)\"\n                @click=${this.switchMode.bind(this, Modes.Soul)}\n                >soul source code</a\n              >.\n            </p>\n            <h3>Variables</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Description</th>\n                  <th>Default</th>\n                </tr>\n              </thead>\n              <tbody>\n                ${!this.soulVariablesMap?.size\n                  ? nothing\n                  : repeat(\n                      this.soulVariablesMap,\n                      ([key]) => key,\n                      ([, variable]) => html`\n                        <tr>\n                          <td><code>${variable.key}</code></td>\n                          <td>${variable.description}</td>\n                          <td><code>${variable.value}</code></td>\n                        </tr>\n                      `\n                    )}\n              </tbody>\n            </table>\n            ${!this.partList\n              ? nothing\n              : html`\n                  <h3>Parts</h3>\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Template</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      ${this.partList.map(\n                        ([name, description]) => html`\n                          <tr>\n                            <td><code>${name}</code></td>\n                            <td>${description}</td>\n                            <td>\n                              <code\n                                >${this.nameVariants.nameTag}::part(${name})\n                                {}</code\n                              >\n                            </td>\n                          </tr>\n                        `\n                      )}\n                    </tbody>\n                  </table>\n                `}\n          </div>\n        </app-section>\n      </div>\n\n      ${!this.prevPage && !this.nextPage\n        ? nothing\n        : html`\n            <div class=\"foot\">\n              ${!this.prevPage\n                ? nothing\n                : html`\n                    <tini-link .href=${this.prevPage.href}\n                      >${this.prevPage.title}</tini-link\n                    >\n                  `}\n              ${!this.nextPage\n                ? nothing\n                : html`\n                    <tini-link .href=${this.nextPage.href}\n                      >${this.nextPage.title}</tini-link\n                    >\n                  `}\n            </div>\n          `}\n    `;\n  }\n\n  private renderComponentSource() {\n    return html`\n      <div class=\"body component-source\">\n        ${!this.componentSourceCode\n          ? nothing\n          : html`\n              <p>\n                View on Github:\n                <a href=${this.componentLink} target=\"_blank\"\n                  >${this.componentLink}</a\n                >\n              </p>\n              <app-code .code=${this.componentSourceCode}></app-code>\n            `}\n      </div>\n    `;\n  }\n\n  private renderSoulSource() {\n    return html`\n      <div class=\"body soul-source\">\n        ${!this.soulSourceCode\n          ? nothing\n          : html`\n              <p>\n                View on Github:\n                <a href=${this.soulLink} target=\"_blank\">${this.soulLink}</a>\n              </p>\n              <app-code .code=${this.soulSourceCode}></app-code>\n            `}\n      </div>\n    `;\n  }\n\n  static styles = css`.title-bar{display:flex;align-items:center;justify-content:space-between}.title-bar .title .github-link{margin-left:var(--size-space);opacity:.5}.title-bar .title .github-link:hover{opacity:1}.title-bar .switch-mode{display:flex;align-items:center;justify-content:center}.title-bar .switch-mode button{cursor:pointer;padding:var(--size-space-0_4x) var(--size-space-0_8x);font-size:var(--size-text-0_9x);border:var(--size-border) solid var(--color-primary-tint);border-right:none;color:var(--color-primary)}.title-bar .switch-mode button:first-child{border-radius:var(--size-radius) 0 0 var(--size-radius)}.title-bar .switch-mode button:last-child{border-radius:0 var(--size-radius) var(--size-radius) 0;border-right:var(--size-border) solid var(--color-primary-tint)}.title-bar .switch-mode button.active{background:var(--color-primary);color:var(--color-primary-contrast)}.body{padding-bottom:2rem}.body.article,.body.component-source,.body.soul-source{margin-top:var(--size-space-4x)}table{width:100%;border-collapse:collapse;border-spacing:0}table thead tr th{border-bottom:var(--size-border-2x) solid var(--color-background-shade)}table tbody tr td{border-bottom:1px solid var(--color-background-shade)}table th,table td{padding:var(--size-space-0_5x);text-align:left}`;\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$2cac125a472a13f8$export$86e8357a29c0b342","set","s","enumerable","configurable","Modes","$2cac125a472a13f8$var$Modes","$l73V3","$5B3HT","$ihCia","$aPFYP","$94no1","$5GozN","$ZHozn","$8b9en","$1CqOf","$dJr09","$fWxFe","$8L1cM","$90HH7","$iDR9r","TiniComponent","_","defaultTagName","onCreate","soulVariablesMap","extractCSSVariables","buildSoulUrl","componentProperties","extractComponentProperties","buildComponentUrl","onChanges","nameVariants","buildNameVariants","importTiniCode","buildImportTiniCode","importSpecificCode","buildImportSpecificCode","standaloneCode","buildStandaloneCode","articleLink","buildArticleLink","componentLink","buildComponentLink","componentUrl","soulLink","buildSoulLink","soulUrl","prefix","customComponentPrefix","toLowerCase","prefixUppercase","toUpperCase","prefixCapitalized","slice","nameCapitalized","name","split","map","item","join","nameConst","replace","nameTag","nameClass","PACKAGE_PREFIX","activeSoulId","referArticleRepoUrl","path","REPO_URL","buildGithubRawUrl","referComponentRepoUrl","switchMode","mode","contentMode","Component","componentSourceCode","Soul","soulSourceCode","getText","render","html","titleText","classMap","active","Article","bind","cache","renderComponentSource","renderSoulSource","renderArticle","IMPORT_TAB_ITEMS","referImport","detail","mainStore","commit","ImportMethods","Tini","Specific","Standalone","length","prop","type","isOptional","defaultValue","nothing","size","repeat","key","variable","description","value","partList","prevPage","nextPage","href","title","_1","styles","css","constructor","args","Configurable","getOption","OFFICIAL_REPO_URL","__decorate","Input","String","prototype","Array","Reactive","Subscribe","components","IconGithubComponent","AppSectionComponent","AppTabsComponent","AppCodeComponent","theming","styling","stylingWithBases","codeBases","headingsBases","linkBases","textBases","buttonBases","commonBases"],"version":3,"file":"text.be69170f.js.map"}