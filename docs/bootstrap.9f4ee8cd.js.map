{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,Q,C,Q,S,C,C,C,E,E,E,O,C,uB,W,O,C,G,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SC6Ca,IAAA,EAAN,cAAmC,EAAA,aAAY,C,O,C,C,C,A,C,KACpC,IAAA,CAAA,cAAA,CAhBW,e,C,G,AAgCnB,CAAA,SAAS,CAAC,EAAU,EAAuB,CAAE,CACnD,IAAM,EAAU,EAAS,KAAA,CAAM,KAAK,GAApC,GAOA,MAAO,CAAC,KAAK,EANI,CAAA,CACf,IAAK,gBACL,KAAM,aACN,IAAK,YACL,IAAK,YACP,CAAA,CAAC,CAAC,EAAQ,CACc,QAAQ,EAAE,EAAc,CAAC,AACnD,CAUA,MAAM,UAAW,CACf,IAAI,CAAC,IAAA,CAAO,MAAM,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAChB,CAAC,kBAAkB,EAAE,IAAI,CAAC,WAAA,CAAY,kBAAkB,CAAC,EAE3D,IAAI,CAAC,UAAA,CAAa,KAAK,IAAA,CAAK,IAAI,CAAC,IAAA,CAAK,KAAA,CAAM,MAAA,CAAS,IAAI,CAAC,IAA1D,CACF,CAEA,WAAY,CAGV,GAFA,IAAI,CAAC,WAAA,CAAc,IAAI,CAAC,gBAAxB,GACA,IAAI,CAAC,aAAA,CAAgB,IAAI,CAAC,kBAA1B,GAEE,IAAI,CAAC,IAAA,EACL,IAAI,CAAC,UAAA,EACL,IAAI,CAAC,WAAA,EAAe,GACpB,IAAI,CAAC,WAAA,EAAe,IAAI,CAAC,UAAA,CACzB,CACA,IAAM,EAAQ,IAAI,CAAC,WAAA,EAAa,OAAO,aACvC,CAAA,IAAI,CAAC,cAAA,CACH,AAAA,CAAA,AAAC,EAEG,IAAI,CAAC,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,CAAC,CAAC,EAAK,GAAK,EAAK,QAAA,CAAS,IADjD,IAAI,CAAC,IAAA,CAAK,KAAA,AACuC,EACrD,KAAA,CAAO,AAAA,CAAA,IAAI,CAAC,WAAA,CAAc,CAAA,EAAK,IAAI,CAAC,IAAA,CAAM,IAAI,CAAC,IAAA,CAAO,IAAI,CAAC,WAJ7D,CAKF,CACF,CAEQ,kBAAmB,CACzB,MAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAA,CAAY,CAAC,AACpC,CAEQ,oBAAqB,CAC3B,MAAO,CAAC,EAAE,IAAI,CAAC,cAAA,CAAe,sBAAsB,EAAE,IAAI,CAAC,WAAA,CAAY,CAAC,AAC1E,CAEA,MAAc,UAAU,CAAY,CAAE,CAC/B,IAAI,CAAC,QAAA,CAAS,KAAA,GAEnB,IAAI,CAAC,QAAA,CAAS,KAAA,CAAM,OAAA,CAAU,EAE9B,IAAI,CAAC,QAAA,CAAS,KAAA,CAAM,IAApB,GACF,CAEU,QAAS,CACjB,MAAO,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;0BAEU,EAAE,IAAI,CAAC,SAAA,EAAa,QAAQ;;;mCAGnB,EAAE,IAAI,CAAC,WAAA,CAAY;;6BAEzB,EAAE,IAAI,CAAC,IAAA,EAAM,SAAW,IAAI;;oBAErC,EAAE,IAAI,CAAC,cAAA,CAAe;;;oBAGtB,EAAE,IAAI,CAAC,aAAA,CAAc;;UAE/B,EAAE,AAAC,IAAI,CAAC,QAAA,CAEJ,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;0BAEO,EAAE,IAAI,CAAC,QAAA,CAAS;;cAE5B,CAAC,CALD,EAAA,OAAM,CAKJ;;;;;;;4BAOY,EAAE,IAAI,CAAC,cAAA,EAAgB,QAAU,IAAI;YACrD,EAAE,IAAI,CAAC,IAAA,EAAM,MAAM,QAAU,IAAI;;;;wBAIrB,EAAE,AAAqB,IAArB,IAAI,CAAC,WAAA,CAAkB;qBAC5B,EAAE,IAAM,IAAI,CAAC,WAAA,GAAc;;;;;;;uBAOzB,EAAE,GAAK,IAAI,CAAC,WAAA,CAAY;uBACxB,EAAE,AAAC,GACP,IAAI,CAAC,WAAA,CAAc,OACjB,EAAE,MAAA,CAA4B,KAAA,EAC9B;;oBAED,EAAE,IAAI,CAAC,UAAA,EAAc,EAAE;;sBAErB,EAAE,IAAI,CAAC,UAAA,EAAc,IAAI;;;wBAGvB,EAAE,IAAI,CAAC,WAAA,GAAgB,IAAI,CAAC,UAAA,CAAW;qBAC1C,EAAE,IAAM,IAAI,CAAC,WAAA,GAAc;;;;;;;;;mBAS7B,EAAE,AAAC,IACiB,IAArB,IAAI,CAAC,WAAA,EAAmB,CAAA,IAAI,CAAC,WAAA,CAAc,CAAA,EAC/C,IAAI,CAAC,WAAA,CAAc,EAAG,MAAA,CAA4B,KAAlD,AACF,EAAE;;;;;UAKJ,EAAE,AAAC,IAAI,CAAC,cAAA,EAAgB,OAIpB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;kBAED,EAAE,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EACA,IAAI,CAAC,cAAA,CACL,AAAA,GAAO,CAAG,CAAC,EAAE,CACb,AAAA,GAAO,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;8BAGF,EAAE,CAAG,CAAC,EAAE,CAAC;+BACR,EAAE,IAAM,IAAI,CAAC,SAAA,CAAU,GAAK;;iCAE1B,EAAE,IAAI,CAAC,QAAA,CAAS,GAAK,KAAK,EAAE,CAAG,CAAC,EAAE,CAAC;;oBAEhD,CAAC,EACD;;cAEN,CAAC,CAnBD,AAAC,IAAI,CAAC,WAAA,CAEJ,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,uCAAuC,CAAC,CAD7C,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,kDAAkD,CAAC,CAkBxD;;;;;QAKR,EAAE,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,IAAI,CAAC,QAAA,EAAU;qBACR,EAAE,IAAI,CAAC,WAAA,CAAY;wBAChB,EAAE,IAAI,CAAC,IAAA,EAAM,QAAQ;oBACzB,EAAE,IAAI,CAAC,UAAA,CAAW;;IAElC,CAAC,AACH,C,O,C,C,C,A,C,KAEO,IAAA,CAAA,MAAA,CAAS,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC,uzCAAuzC,CAAC,A,C,G,A,a,G,C,C,C,K,I,GAjL3zC,IAAA,CAAA,cAAA,CAAiB,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,SAAA,CAAU,gBACxC,IAAA,CAAA,IAAA,CAAO,IAQJ,IAAA,CAAA,WAAA,CAAc,EAG1B,IAAA,CAAA,QAAA,CAAuC,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,G,CAsKjD,E,A,C,E,E,U,A,E,CA/KG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GANT,CAAA,EAAA,SAAA,CAAA,OAAA,KAAA,G,A,C,E,E,U,A,E,CAOV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GAPT,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CAQV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GART,CAAA,EAAA,SAAA,CAAA,YAAA,KAAA,G,A,C,E,E,U,A,E,CASV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GATT,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,G,A,C,E,E,U,A,E,CAUV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,OAAO,GAVV,CAAA,EAAA,SAAA,CAAA,aAAA,KAAA,G,A,C,E,E,U,A,E,CAYV,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,IAZU,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CAaV,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,IAbU,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CA4BV,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,IA5BU,CAAA,EAAA,SAAA,CAAA,OAAA,KAAA,GAAA,EAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CAdZ,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,CACT,WAAY,CAAC,EAAA,gBAAe,CAAG,EAAA,qBAAoB,CAAE,CACrD,QAAS,CACP,QAAS,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,CACxB,EAAA,WAAU,CACV,EAAA,aAAY,CACZ,EAAA,SAAQ,CACR,EAAA,SAAQ,CACR,EAAA,WAAU,CACV,EAAA,SAAQ,CACR,EAAA,SAAQ,CACT,CACH,CACF,GACa,CAAA,E,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,wB,W,O,C,G,I,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,S,E,E,SCKA,IAAA,EAAN,cAAoC,EAAA,aAAY,C,O,C,C,C,A,C,KACrC,IAAA,CAAA,cAAA,CApBY,gB,C,G,AA0CpB,CAAA,qBAAqB,CAAY,CAAE,CACzC,GAAM,CAAC,EAAU,EAAc,CAAG,EAC5B,EAAU,EAAS,KAAA,CAAM,KACzB,EAAM,EAAQ,GAApB,GACM,EAAW,EAAQ,IAAA,CAAK,KAAK,OAAA,CAAQ,MAAO,KAC5C,EAAkB,EACrB,KAAA,CAAM,KACN,GAAA,CAAI,AAAA,GAAQ,EAAK,MAAA,CAAO,GAAG,WAAA,GAAgB,EAAK,KAAA,CAAM,IACtD,IAAA,CAAK,IACF,EAAU,CAAC,IAAI,EAAE,EAAgB,CAAC,CAClC,EAAU,CAAC,KAAK,EAAE,EAAS,CAAC,CAC5B,EAAY,CAAC,IAAI,EAAE,EAAgB,SAAS,CAAC,CAC7C,EAAW,IAAI,CAAC,WAAA,EAAe,mBAC/B,EAAiB,IAAI,CAAC,cAAA,EAAkB,SAQxC,EAAU,CAAC,KAAK,EAPL,CACf,IAAK,gBACL,KAAM,aACN,IAAK,YACL,IAAK,YACP,CAAC,CAAC,EAAI,CAE2B,QAAQ,EAAE,EAAc,CAAC,CAEpD,EAAa,CAAC;;;QAGhB,EAAE,EAAU,QAAQ,EAAE,EAAS;;;;IAInC,EAAE,EAAU;;;iDAGiC,CAAC,CAExC,EAAa,CAAC;;;QAGhB,EAAE,EAAS,CAAC,EAAE,EAAS;;;;;;;;QAQvB,EAAE,EAAU,QAAQ,EAAE,EAAS;;;EAGrC,EAAE,EAAU;;AAEd,CAAC,CAES,EAAiB,CAAC,+BAA+B,EAAE,EAAS,CAAC,EAAE,EAAe,CAAC,EAAE,EAAS,qBAAqB,CAAC,CAEhH,EAAc,CAAC;;;mBAGN,EAAE,EAAQ,WAAW,EAAE,EAAS,CAAC,EAAE,EAAS;;;;qCAIzB,EAAE,EAAQ;cACjC,EAAE,EAAQ;;AAEzB,CAAC,CAES,EAAU,CAAC;;;;gBAIL,EAAE,EAAQ,YAAY,EAAE,EAAS,CAAC,EAAE,EAAS;;;0CAGlB,EAAE,EAAQ;;;wBAG7B,EAAE,EAAQ;AAClC,CAAC,CACS,EAAiB,OAAO,IAAA,CAAK,GAE7B,EAAU,+BAAoC,KAAY,KAAkB,WAAkB,CAEpG,MAAO,CACL,QAAA,EACA,WAAA,EACA,WAAA,EACA,eAAA,EACA,YAAA,EACA,QAAA,EACA,eAAA,EACA,QAAA,EACA,MAAO,CACL,QAAA,CACF,CACF,CACF,CAEA,WAAY,CACV,IAAI,CAAC,aAAA,CAAgB,AAAC,IAAI,CAAC,OAAA,CAEvB,IAAI,CAAC,oBAAA,CAAqB,IAAI,CAAC,OAFnC,EACK,CAAC,CAER,CAEA,MAAO,CACL,IAAI,CAAC,QAAA,CAAS,KAAA,EAAO,MACvB,CAEQ,WAAY,CAClB,IAAI,CAAC,QAAA,CAAS,KAAA,EAAO,OACrB,IAAI,CAAC,OAAA,CAAU,KAAA,CACjB,CAEU,QAAS,CACjB,GAAM,CAAA,QACJ,CAAO,CAAA,WACP,CAAU,CAAA,WACV,CAAU,CAAA,eACV,CAAc,CAAA,YACd,CAAW,CAAA,QACX,CAAO,CAAA,eACP,CAAc,CAAA,QACd,CAAO,CAAA,MACP,CAAK,CACN,CAAG,IAAI,CAAC,aAVT,CAWA,MAAO,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;QAER,EAAE,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,EAAI,IAAI,CAAC,QAAA,EAAU;mBACV,EAAE,IAAI,CAAC,OAAA,EAAS,CAAC,EAAE,CAAC;wBACf,EAAE,CAAA,EAAK;YACnB,EAAE,IAAI,CAAC,SAAA,CAAU;;QAErB,EAAE,AAAC,IAAI,CAAC,OAAA,CAEJ,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;0CAEyB,EAAE,CAAA,EAAK;;;;;;;;;;gCAUjB,EAAE,IAAI,CAAC,sBAAA,CAAuB;kCAC5B,EAAE,AAAA,EAAA,SAAQ,CAAE,gBAAA,CAAiB;8BACjC,EAAE,CAAC,CAAA,OAAC,CAAM,CAA8B,GAC9C,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,MAAA,CAAO,mBAAoB,EAAO,IAAA,EAAM;;oCAEtC,EAAE,AAAA,EAAA,kBAAiB,CAAE,IAAA,CAAK;;wCAEtB,EAAE,EAAW;;;oCAGjB,EAAE,AAAA,EAAA,kBAAiB,CAAE,MAAA,CAAO;;wCAExB,EAAE,EAAW;;;oCAGjB,EAAE,AAAA,EAAA,kBAAiB,CAAE,UAAA,CAAW;;;;;wCAK5B,EAAE,EAAe;;;;;;;;;oCASrB,EAAE,AAAA,EAAA,kBAAiB,CAAE,OAAA,CAAQ;;wCAEzB,EAAE,EAAY;;;oCAGlB,EAAE,AAAA,EAAA,kBAAiB,CAAE,GAAA,CAAI;;;;;;;;;;;;;wCAarB,EAAE,EAAQ;;wCAEV,EAAE,EAAe;;;oCAGrB,EAAE,AAAA,EAAA,kBAAiB,CAAE,GAAA,CAAI;;wCAErB,EAAE,EAAQ;;;;;;;uBAO3B,EAAE,EAAQ;kCACC,EAAE,IAAI,CAAC,eAAA,CAAgB;oCACrB,EAAE,EAAM;8BACd,EAAE,IAAI,CAAC,UAAA,CAAW;;;YAGpC,CAAC,CAhFD,EAAA,OAAM,CAgFJ;;IAEV,CAAC,AACH,C,O,C,C,C,A,C,KAEO,IAAA,CAAA,MAAA,CAAS,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC,0GAA0G,CAAC,A,C,G,A,a,G,C,C,C,K,I,GA9O9G,IAAA,CAAA,sBAAA,CAAoC,CACnD,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,IAAzB,AAA6B,EAC9B,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,MAAzB,AAA+B,EAChC,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,UAAzB,AAAmC,EACpC,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,OAAzB,AAAgC,EACjC,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,GAAzB,AAA4B,EAC7B,CAAC,KAAM,AAAA,EAAA,kBAAiB,CAAE,GAAzB,AAA4B,EAC9B,CAEgB,IAAA,CAAA,eAAA,CAAkB,CAAC,EAAc,IAChD,AAAC,EAAiB,EAAK,OAAA,CAAQ,aAAc,EAAQ,OADtC,EACJ,EAOL,IAAA,CAAA,QAAA,CAAmC,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,IACnC,IAAA,CAAA,aAAA,CAAwC,CAAC,C,CA6NnD,E,A,C,E,E,U,A,E,CAnOG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GAfT,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CAgBV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GAhBT,CAAA,EAAA,SAAA,CAAA,iBAAA,KAAA,G,A,C,E,E,U,A,E,CAiBV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,OAAO,GAjBV,CAAA,EAAA,SAAA,CAAA,aAAA,KAAA,G,A,C,E,E,U,A,E,CAkBV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,EAAM,CAAC,KAAM,MAAM,GAlBT,CAAA,EAAA,SAAA,CAAA,UAAA,KAAA,GAAA,EAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CAlBZ,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,CACT,WAAY,CACV,EAAA,mBAAkB,CAClB,EAAA,gBAAe,CACf,EAAA,gBAAe,CACf,EAAA,iBAAgB,CAChB,EAAA,2BAA0B,CAC3B,CACD,QAAS,CACP,QAAS,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,CACxB,EAAA,WAAU,CACV,EAAA,aAAY,CACZ,EAAA,SAAQ,CACR,EAAA,SAAQ,CACR,EAAA,SAAQ,CACT,CACH,CACF,GACa,CAAA,E","sources":["<anon>",".tini-app/components/icon-page.ts",".tini-app/components/icon-modal.ts"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequire2169\"];\nparcelRequire.register(\"kf8SB\", function(module, exports) {\n\n$parcel$export(module.exports, \"AppIconPageComponent\", function () { return $a2893b34c64640f9$export$fd425e0b26216597; });\n\nvar $l73V3 = parcelRequire(\"l73V3\");\n\nvar $5B3HT = parcelRequire(\"5B3HT\");\n\nvar $aPFYP = parcelRequire(\"aPFYP\");\n\nvar $5GozN = parcelRequire(\"5GozN\");\n\nvar $dJr09 = parcelRequire(\"dJr09\");\n\nvar $iDR9r = parcelRequire(\"iDR9r\");\n\nvar $cRCDF = parcelRequire(\"cRCDF\");\nconst $a2893b34c64640f9$export$fadbc45d6391de32 = \"app-icon-page\";\nlet $a2893b34c64640f9$export$fd425e0b26216597 = class AppIconPageComponent extends (0, $5B3HT.TiniComponent) {\n    static #_ = (()=>{\n        this.defaultTagName = $a2893b34c64640f9$export$fadbc45d6391de32;\n    })();\n    buildUrl([fileName, base64Content]) {\n        const fileExt = fileName.split(\".\").pop();\n        const mimeType = {\n            svg: \"image/svg+xml\",\n            webp: \"image/webp\",\n            png: \"image/png\",\n            jpg: \"image/jpeg\"\n        }[fileExt];\n        return `data:${mimeType};base64,${base64Content}`;\n    }\n    async onCreate() {\n        this.data = await (0, $dJr09.get)(`https://unpkg.com/${this.packageName}@latest/index.json`);\n        this.totalPages = Math.ceil(this.data.items.length / this.SIZE);\n    }\n    onChanges() {\n        this.installCode = this.buildInstallCode();\n        this.changelogsUrl = this.buildChangelogsUrl();\n        if (this.data && this.totalPages && this.currentPage >= 1 && this.currentPage <= this.totalPages) {\n            const query = this.filterQuery?.trim().toLowerCase();\n            this.displayedItems = (!query ? this.data.items : this.data.items.filter(([name])=>name.includes(query))).slice((this.currentPage - 1) * this.SIZE, this.SIZE * this.currentPage);\n        }\n    }\n    buildInstallCode() {\n        return `npm i ${this.packageName}`;\n    }\n    buildChangelogsUrl() {\n        return `${this.ICONS_REPO_URL}/blob/main/changelogs/${this.packageName}`;\n    }\n    async showModal(def) {\n        if (!this.modalRef.value) return;\n        // update title and content\n        this.modalRef.value.iconDef = def;\n        // show modal\n        this.modalRef.value.show();\n    }\n    render() {\n        return (0, $5B3HT.html)`\n      <div class=\"head\">\n        <h1 class=\"title\">${this.titleText || \"Icons\"}</h1>\n        <ul>\n          <li>\n            Install: <code><strong>${this.installCode}</strong></code>\n          </li>\n          <li>Version: <code>${this.data?.version || \"?\"}</code></li>\n          <li>\n            <a href=${this.ICONS_REPO_URL} target=\"_blank\">Icons Repo</a>\n          </li>\n          <li>\n            <a href=${this.changelogsUrl} target=\"_blank\">Changelogs</a>\n          </li>\n          ${!this.homepage ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n                <li>\n                  <a href=${this.homepage} target=\"_blank\">Homepage</a>\n                </li>\n              `}\n        </ul>\n      </div>\n\n      <div class=\"body\">\n        <div class=\"nav\">\n          <div class=\"summary\">\n            Display <strong>${this.displayedItems?.length || \"-\"}</strong> /\n            ${this.data?.items.length || \"-\"} icons.\n          </div>\n          <div class=\"pagination\">\n            <button\n              ?disabled=${this.currentPage === 1}\n              @click=${()=>this.currentPage--}\n            >\n              Prev\n            </button>\n            <div class=\"page-no\">\n              <input\n                type=\"number\"\n                .value=${\"\" + this.currentPage}\n                @input=${(e)=>this.currentPage = Number(e.target.value)}\n                min=\"1\"\n                max=${this.totalPages || 1}\n              />\n              <span>/ ${this.totalPages || \"?\"}</span>\n            </div>\n            <button\n              ?disabled=${this.currentPage === this.totalPages}\n              @click=${()=>this.currentPage++}\n            >\n              Next\n            </button>\n          </div>\n          <input\n            class=\"filter\"\n            type=\"search\"\n            placeholder=\"Search icons ...\"\n            @input=${(e)=>{\n            if (this.currentPage !== 1) this.currentPage = 1;\n            this.filterQuery = e.target.value;\n        }}\n          />\n        </div>\n\n        <div class=\"content\">\n          ${!this.displayedItems?.length ? !this.filterQuery ? (0, $5B3HT.html)`<div class=\"loading\">Fetching icons list ...</div>` : (0, $5B3HT.html)`<div class=\"empty\">No icon found!</div>` : (0, $5B3HT.html)`\n                <div class=\"icons\">\n                  ${(0, $5B3HT.repeat)(this.displayedItems, (def)=>def[0], (def)=>(0, $5B3HT.html)`\n                      <button\n                        class=\"icon\"\n                        title=${def[0]}\n                        @click=${()=>this.showModal(def)}\n                      >\n                        <img src=${this.buildUrl(def)} alt=${def[0]} />\n                      </button>\n                    `)}\n                </div>\n              `}\n        </div>\n      </div>\n\n      <app-icon-modal\n        ${(0, $5B3HT.ref)(this.modalRef)}\n        .packageName=${this.packageName}\n        .packageVersion=${this.data?.version}\n        ?noVariants=${this.noVariants}\n      ></app-icon-modal>\n    `;\n    }\n    static #_1 = (()=>{\n        this.styles = (0, $5B3HT.css)`:host{--icon-size: 3.5rem}.head ul{list-style:none;margin:0;padding:0;display:flex;gap:2rem}.body{margin-top:2rem;padding:2rem 0;border-top:var(--size-border) solid var(--color-background-shade)}.nav{display:flex;align-items:center;justify-content:space-between}.pagination{display:flex;align-items:center}.filter,.pagination input,.pagination button{padding:.5rem .25rem .5rem .5rem;border:var(--size-border) solid var(--color-background-shade);border-radius:var(--size-radius);background:var(--color-background);color:var(--color-foreground)}.pagination button{cursor:pointer;border-color:var(--color-medium);padding:.5rem}.pagination button:disabled{cursor:not-allowed;opacity:.3}.pagination .page-no{margin:0 .75rem}.filter{width:30%}.content{margin-top:2rem}.icons{display:grid;grid-template-columns:repeat(auto-fill, var(--icon-size));gap:.75rem}.icon{cursor:pointer;display:flex;align-items:center;justify-content:center;width:var(--icon-size);height:var(--icon-size);border:1px solid var(--color-background-shade);border-radius:5px;background:var(--color-background-tint)}.icon:hover{border-color:var(--color-medium);background-color:var(--color-background-tint-2)}.icon img{width:calc(var(--icon-size) - 1.5rem);height:calc(var(--icon-size) - 1.5rem)}.loading,.empty{text-align:center;padding:2rem 0;color:var(--color-medium)}`;\n    })();\n    constructor(...args){\n        super(...args);\n        this.ICONS_REPO_URL = (0, $5GozN.Configurable).getOption(\"iconsRepoUrl\");\n        this.SIZE = 200;\n        this.currentPage = 1;\n        this.modalRef = (0, $5B3HT.createRef)();\n    }\n};\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"name\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"packageName\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"titleText\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"homepage\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Boolean\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"noVariants\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"currentPage\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"filterQuery\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Reactive)()\n], $a2893b34c64640f9$export$fd425e0b26216597.prototype, \"data\", void 0);\n$a2893b34c64640f9$export$fd425e0b26216597 = (0, $l73V3.__decorate)([\n    (0, $5B3HT.Component)({\n        components: [\n            (0, $iDR9r.AppCodeComponent),\n            (0, $cRCDF.AppIconModalComponent)\n        ],\n        theming: {\n            styling: (0, $5B3HT.stylingWithBases)([\n                (0, $aPFYP.commonBases),\n                (0, $aPFYP.headingsBases),\n                (0, $aPFYP.linkBases),\n                (0, $aPFYP.textBases),\n                (0, $aPFYP.buttonBases),\n                (0, $aPFYP.codeBases),\n                (0, $aPFYP.formBases)\n            ])\n        }\n    })\n], $a2893b34c64640f9$export$fd425e0b26216597);\n\n});\nparcelRequire.register(\"cRCDF\", function(module, exports) {\n\n$parcel$export(module.exports, \"AppIconModalComponent\", function () { return $a93d329b864140c8$export$d9e41647c6d39b4e; });\n\nvar $l73V3 = parcelRequire(\"l73V3\");\n\nvar $5B3HT = parcelRequire(\"5B3HT\");\n\nvar $aPFYP = parcelRequire(\"aPFYP\");\n\nvar $ZHozn = parcelRequire(\"ZHozn\");\n\nvar $fWxFe = parcelRequire(\"fWxFe\");\n\nvar $8L1cM = parcelRequire(\"8L1cM\");\n\nvar $90HH7 = parcelRequire(\"90HH7\");\n\nvar $iDR9r = parcelRequire(\"iDR9r\");\n\nvar $pUtW5 = parcelRequire(\"pUtW5\");\n\nvar $3o4bj = parcelRequire(\"3o4bj\");\nconst $a93d329b864140c8$export$f14d54158ffe6732 = \"app-icon-modal\";\nlet $a93d329b864140c8$export$d9e41647c6d39b4e = class AppIconModalComponent extends (0, $5B3HT.TiniComponent) {\n    static #_ = (()=>{\n        this.defaultTagName = $a93d329b864140c8$export$f14d54158ffe6732;\n    })();\n    extractContentValues(def) {\n        const [fileName, base64Content] = def;\n        const nameArr = fileName.split(\".\");\n        const ext = nameArr.pop();\n        const iconName = nameArr.join(\".\").replace(/\\./g, \"-\");\n        const nameCapitalized = iconName.split(\"-\").map((item)=>item.charAt(0).toUpperCase() + item.slice(1)).join(\"\");\n        const nameVar = `icon${nameCapitalized}`;\n        const nameTag = `icon-${iconName}`;\n        const nameClass = `Icon${nameCapitalized}Component`;\n        const packName = this.packageName || \"@tinijs/ui-icons\";\n        const packageVersion = this.packageVersion || \"latest\";\n        const mimeType = {\n            svg: \"image/svg+xml\",\n            webp: \"image/webp\",\n            png: \"image/png\",\n            jpg: \"image/jpeg\"\n        }[ext];\n        const iconSRC = `data:${mimeType};base64,${base64Content}`;\n        const tiniJSCode = `import {Component} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${packName}';\n\n@Component({\n  components: [\n    ${nameClass}, // 2. register the component\n  ]\n});\nexport class MyComponent extends TiniComponent {}`;\n        const othersCode = `/*\n * Option I: include in your component\n */\nimport '${packName}/${iconName}.include';\n\n/*\n * Option II: import as a shared bundle (if your bundler supports it)\n */\nimport {useComponents} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${packName}';\n\nuseComponents([\n  ${nameClass}, // 2. register the component\n]);\n`;\n        const standaloneCode = `<script src=\"https://unpkg.com/${packName}@${packageVersion}/${iconName}.bundle.js\"></script>`;\n        const dataURICode = `import {html} from 'lit';\n\n// 1. import the data URI\nimport {dataURI as ${nameVar}URI} from '${packName}/${iconName}.source';\n\n// 2. use it as background image or image src\nhtml\\`\n  <i style=\"background-image: url(\\$\\{${nameVar}URI\\})\"></i>\n  <img src=\\$\\{${nameVar}URI\\} />\n\\`;\n`;\n        const svgCode = `import {html} from 'lit';\nimport {unsafeSVG} from 'lit/directives/unsafe-svg.js';\n\n// 1. import the code\nimport {code as ${nameVar}Code} from '${packName}/${iconName}.source';\n\n// 2a. render\nhtml\\`<div class=\"container\">\\$\\{unsafeSVG(${nameVar}Code)\\}</div>\\`;\n\n// 2b. or inject\ncontainerEl.innerHTML = ${nameVar}Code;\n`;\n        const svgPreviewCode = window.atob(base64Content);\n        const urlCode = `<img ${\"src\"}=\"https://unpkg.com/${packName}@${packageVersion}/${iconName}.svg\" />`;\n        return {\n            iconSRC: iconSRC,\n            tiniJSCode: tiniJSCode,\n            othersCode: othersCode,\n            standaloneCode: standaloneCode,\n            dataURICode: dataURICode,\n            svgCode: svgCode,\n            svgPreviewCode: svgPreviewCode,\n            urlCode: urlCode,\n            names: {\n                nameTag: nameTag\n            }\n        };\n    }\n    onChanges() {\n        this.contentValues = !this.iconDef ? {} : this.extractContentValues(this.iconDef);\n    }\n    show() {\n        this.modalRef.value?.show();\n    }\n    hideModal() {\n        this.modalRef.value?.hide();\n        this.iconDef = undefined;\n    }\n    render() {\n        const { iconSRC: iconSRC, tiniJSCode: tiniJSCode, othersCode: othersCode, standaloneCode: standaloneCode, dataURICode: dataURICode, svgCode: svgCode, svgPreviewCode: svgPreviewCode, urlCode: urlCode, names: names } = this.contentValues;\n        return (0, $5B3HT.html)`\n      <app-modal\n        ${(0, $5B3HT.ref)(this.modalRef)}\n        .titleText=${this.iconDef?.[0]}\n        .backdropClosed=${true}\n        @no=${this.hideModal}\n      >\n        ${!this.iconDef ? (0, $5B3HT.nothing) : (0, $5B3HT.html)`\n              <div class=\"modal-body\">\n                <app-section .noUsageTabs=${true} style=\"margin-top: 1rem;\">\n                  <div slot=\"content\" class=\"imports\">\n                    <h2 style=\"margin-top: 0;\">Imports</h2>\n                    <p>\n                      After installing the respective icons pack, you can import\n                      and use the component, data URI, SVG code or URL anywhere\n                      in your project:\n                    </p>\n\n                    <app-tabs\n                      .tabItems=${this.ICONS_IMPORT_TAB_ITEMS}\n                      .activeName=${(0, $fWxFe.mainStore).referIconsImport}\n                      @change=${({ detail: detail })=>(0, $fWxFe.mainStore).commit(\"referIconsImport\", detail.name)}\n                    >\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).Tini}>\n                        <p>For the Tini framework.</p>\n                        <app-code .code=${tiniJSCode}></app-code>\n                      </div>\n\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).Others}>\n                        <p>For Vue, React, Angular, Svelte, ...</p>\n                        <app-code .code=${othersCode}></app-code>\n                      </div>\n\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).Standalone}>\n                        <p>\n                          Include the standalone version in any HTML page from a\n                          public CDN:\n                        </p>\n                        <app-code .code=${standaloneCode}></app-code>\n                        <p>\n                          <strong>Note that</strong>: this method is\n                          <em>not recommended</em> because the standalone\n                          component is usually bigger in size compares to the\n                          TS/ESM version.\n                        </p>\n                      </div>\n\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).DataURI}>\n                        <p>Use the data URI</p>\n                        <app-code .code=${dataURICode}></app-code>\n                      </div>\n\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).SVG}>\n                        <p>Use the code (SVG icons only).</p>\n                        <p>\n                          SVG codes built using the\n                          <a\n                            href=\"https://github.com/tinijs/cli\"\n                            target=\"_blank\"\n                            >official CLI</a\n                          >\n                          are <strong>sanitized</strong> and\n                          <strong>optimized</strong>, please always review the\n                          code before inject into your HTML.\n                        </p>\n                        <app-code .code=${svgCode}></app-code>\n                        <p>For security review and direct copy.</p>\n                        <app-code .code=${svgPreviewCode}></app-code>\n                      </div>\n\n                      <div data-tab=${(0, $ZHozn.IconsImportMethods).URL}>\n                        <p>Use the direct link.</p>\n                        <app-code .code=${urlCode}></app-code>\n                      </div>\n                    </app-tabs>\n                  </div>\n                </app-section>\n\n                <app-icon-page-content\n                  .src=${iconSRC}\n                  .preprocessCode=${this.PREPROCESS_CODE}\n                  .codeBuildContext=${names}\n                  ?noVariants=${this.noVariants}\n                ></app-icon-page-content>\n              </div>\n            `}\n      </app-modal>\n    `;\n    }\n    static #_1 = (()=>{\n        this.styles = (0, $5B3HT.css)`.modal-body{display:block;width:100%;padding:0 2rem}.modal-body app-icon-page-content{padding-bottom:3rem}`;\n    })();\n    constructor(...args){\n        super(...args);\n        this.ICONS_IMPORT_TAB_ITEMS = [\n            {\n                name: (0, $ZHozn.IconsImportMethods).Tini\n            },\n            {\n                name: (0, $ZHozn.IconsImportMethods).Others\n            },\n            {\n                name: (0, $ZHozn.IconsImportMethods).Standalone\n            },\n            {\n                name: (0, $ZHozn.IconsImportMethods).DataURI\n            },\n            {\n                name: (0, $ZHozn.IconsImportMethods).SVG\n            },\n            {\n                name: (0, $ZHozn.IconsImportMethods).URL\n            }\n        ];\n        this.PREPROCESS_CODE = (code, context)=>!context ? code : code.replace(/tini-icon/g, context.nameTag);\n        this.modalRef = (0, $5B3HT.createRef)();\n        this.contentValues = {};\n    }\n};\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a93d329b864140c8$export$d9e41647c6d39b4e.prototype, \"packageName\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: String\n    })\n], $a93d329b864140c8$export$d9e41647c6d39b4e.prototype, \"packageVersion\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Boolean\n    })\n], $a93d329b864140c8$export$d9e41647c6d39b4e.prototype, \"noVariants\", void 0);\n(0, $l73V3.__decorate)([\n    (0, $5B3HT.Input)({\n        type: Object\n    })\n], $a93d329b864140c8$export$d9e41647c6d39b4e.prototype, \"iconDef\", void 0);\n$a93d329b864140c8$export$d9e41647c6d39b4e = (0, $l73V3.__decorate)([\n    (0, $5B3HT.Component)({\n        components: [\n            (0, $8L1cM.AppSectionComponent),\n            (0, $90HH7.AppTabsComponent),\n            (0, $iDR9r.AppCodeComponent),\n            (0, $pUtW5.AppModalComponent),\n            (0, $3o4bj.AppIconPageContentComponent)\n        ],\n        theming: {\n            styling: (0, $5B3HT.stylingWithBases)([\n                (0, $aPFYP.commonBases),\n                (0, $aPFYP.headingsBases),\n                (0, $aPFYP.linkBases),\n                (0, $aPFYP.textBases),\n                (0, $aPFYP.codeBases)\n            ])\n        }\n    })\n], $a93d329b864140c8$export$d9e41647c6d39b4e);\n\n});\n\n\n\n//# sourceMappingURL=bootstrap.9f4ee8cd.js.map\n","import {\n  Component,\n  TiniComponent,\n  Input,\n  Reactive,\n  html,\n  css,\n  repeat,\n  nothing,\n  ref,\n  createRef,\n  Ref,\n  stylingWithBases,\n} from '@tinijs/core';\nimport {\n  commonBases,\n  headingsBases,\n  linkBases,\n  textBases,\n  buttonBases,\n  codeBases,\n  formBases,\n} from '@tinijs/ui';\n\nimport {Configurable} from '../configurable';\nimport {get} from '../helpers/http';\n\nimport {AppCodeComponent} from './code';\nimport {AppIconModalComponent, IconDef} from './icon-modal';\n\nexport const APP_ICON_PAGE = 'app-icon-page';\n@Component({\n  components: [AppCodeComponent, AppIconModalComponent],\n  theming: {\n    styling: stylingWithBases([\n      commonBases,\n      headingsBases,\n      linkBases,\n      textBases,\n      buttonBases,\n      codeBases,\n      formBases,\n    ]),\n  },\n})\nexport class AppIconPageComponent extends TiniComponent {\n  static readonly defaultTagName = APP_ICON_PAGE;\n\n  private readonly ICONS_REPO_URL = Configurable.getOption('iconsRepoUrl');\n  private readonly SIZE = 200;\n\n  @Input({type: String}) declare name: string;\n  @Input({type: String}) declare packageName: string;\n  @Input({type: String}) declare titleText?: string;\n  @Input({type: String}) declare homepage?: string;\n  @Input({type: Boolean}) declare noVariants?: boolean;\n\n  @Reactive() private currentPage = 1;\n  @Reactive() private filterQuery?: string;\n\n  private modalRef: Ref<AppIconModalComponent> = createRef();\n\n  private buildUrl([fileName, base64Content]: IconDef) {\n    const fileExt = fileName.split('.').pop() as string;\n    const mimeType = {\n      svg: 'image/svg+xml',\n      webp: 'image/webp',\n      png: 'image/png',\n      jpg: 'image/jpeg',\n    }[fileExt];\n    return `data:${mimeType};base64,${base64Content}`;\n  }\n\n  @Reactive() private data?: {version: string; items: Array<IconDef>};\n\n  private totalPages?: number;\n  private displayedItems?: Array<IconDef>;\n\n  private installCode!: ReturnType<typeof this.buildInstallCode>;\n  private changelogsUrl!: ReturnType<typeof this.buildChangelogsUrl>;\n\n  async onCreate() {\n    this.data = await get(\n      `https://unpkg.com/${this.packageName}@latest/index.json`\n    );\n    this.totalPages = Math.ceil(this.data.items.length / this.SIZE);\n  }\n\n  onChanges() {\n    this.installCode = this.buildInstallCode();\n    this.changelogsUrl = this.buildChangelogsUrl();\n    if (\n      this.data &&\n      this.totalPages &&\n      this.currentPage >= 1 &&\n      this.currentPage <= this.totalPages\n    ) {\n      const query = this.filterQuery?.trim().toLowerCase();\n      this.displayedItems = (\n        !query\n          ? this.data.items\n          : this.data.items.filter(([name]) => name.includes(query))\n      ).slice((this.currentPage - 1) * this.SIZE, this.SIZE * this.currentPage);\n    }\n  }\n\n  private buildInstallCode() {\n    return `npm i ${this.packageName}`;\n  }\n\n  private buildChangelogsUrl() {\n    return `${this.ICONS_REPO_URL}/blob/main/changelogs/${this.packageName}`;\n  }\n\n  private async showModal(def: IconDef) {\n    if (!this.modalRef.value) return;\n    // update title and content\n    this.modalRef.value.iconDef = def;\n    // show modal\n    this.modalRef.value.show();\n  }\n\n  protected render() {\n    return html`\n      <div class=\"head\">\n        <h1 class=\"title\">${this.titleText || 'Icons'}</h1>\n        <ul>\n          <li>\n            Install: <code><strong>${this.installCode}</strong></code>\n          </li>\n          <li>Version: <code>${this.data?.version || '?'}</code></li>\n          <li>\n            <a href=${this.ICONS_REPO_URL} target=\"_blank\">Icons Repo</a>\n          </li>\n          <li>\n            <a href=${this.changelogsUrl} target=\"_blank\">Changelogs</a>\n          </li>\n          ${!this.homepage\n            ? nothing\n            : html`\n                <li>\n                  <a href=${this.homepage} target=\"_blank\">Homepage</a>\n                </li>\n              `}\n        </ul>\n      </div>\n\n      <div class=\"body\">\n        <div class=\"nav\">\n          <div class=\"summary\">\n            Display <strong>${this.displayedItems?.length || '-'}</strong> /\n            ${this.data?.items.length || '-'} icons.\n          </div>\n          <div class=\"pagination\">\n            <button\n              ?disabled=${this.currentPage === 1}\n              @click=${() => this.currentPage--}\n            >\n              Prev\n            </button>\n            <div class=\"page-no\">\n              <input\n                type=\"number\"\n                .value=${'' + this.currentPage}\n                @input=${(e: InputEvent) =>\n                  (this.currentPage = Number(\n                    (e.target as HTMLInputElement).value\n                  ))}\n                min=\"1\"\n                max=${this.totalPages || 1}\n              />\n              <span>/ ${this.totalPages || '?'}</span>\n            </div>\n            <button\n              ?disabled=${this.currentPage === this.totalPages}\n              @click=${() => this.currentPage++}\n            >\n              Next\n            </button>\n          </div>\n          <input\n            class=\"filter\"\n            type=\"search\"\n            placeholder=\"Search icons ...\"\n            @input=${(e: InputEvent) => {\n              if (this.currentPage !== 1) this.currentPage = 1;\n              this.filterQuery = (e.target as HTMLInputElement).value;\n            }}\n          />\n        </div>\n\n        <div class=\"content\">\n          ${!this.displayedItems?.length\n            ? !this.filterQuery\n              ? html`<div class=\"loading\">Fetching icons list ...</div>`\n              : html`<div class=\"empty\">No icon found!</div>`\n            : html`\n                <div class=\"icons\">\n                  ${repeat(\n                    this.displayedItems,\n                    def => def[0],\n                    def => html`\n                      <button\n                        class=\"icon\"\n                        title=${def[0]}\n                        @click=${() => this.showModal(def)}\n                      >\n                        <img src=${this.buildUrl(def)} alt=${def[0]} />\n                      </button>\n                    `\n                  )}\n                </div>\n              `}\n        </div>\n      </div>\n\n      <app-icon-modal\n        ${ref(this.modalRef)}\n        .packageName=${this.packageName}\n        .packageVersion=${this.data?.version}\n        ?noVariants=${this.noVariants}\n      ></app-icon-modal>\n    `;\n  }\n\n  static styles = css`:host{--icon-size: 3.5rem}.head ul{list-style:none;margin:0;padding:0;display:flex;gap:2rem}.body{margin-top:2rem;padding:2rem 0;border-top:var(--size-border) solid var(--color-background-shade)}.nav{display:flex;align-items:center;justify-content:space-between}.pagination{display:flex;align-items:center}.filter,.pagination input,.pagination button{padding:.5rem .25rem .5rem .5rem;border:var(--size-border) solid var(--color-background-shade);border-radius:var(--size-radius);background:var(--color-background);color:var(--color-foreground)}.pagination button{cursor:pointer;border-color:var(--color-medium);padding:.5rem}.pagination button:disabled{cursor:not-allowed;opacity:.3}.pagination .page-no{margin:0 .75rem}.filter{width:30%}.content{margin-top:2rem}.icons{display:grid;grid-template-columns:repeat(auto-fill, var(--icon-size));gap:.75rem}.icon{cursor:pointer;display:flex;align-items:center;justify-content:center;width:var(--icon-size);height:var(--icon-size);border:1px solid var(--color-background-shade);border-radius:5px;background:var(--color-background-tint)}.icon:hover{border-color:var(--color-medium);background-color:var(--color-background-tint-2)}.icon img{width:calc(var(--icon-size) - 1.5rem);height:calc(var(--icon-size) - 1.5rem)}.loading,.empty{text-align:center;padding:2rem 0;color:var(--color-medium)}`;\n}\n","import {\n  Component,\n  TiniComponent,\n  Input,\n  html,\n  css,\n  nothing,\n  ref,\n  createRef,\n  Ref,\n  stylingWithBases,\n} from '@tinijs/core';\nimport {\n  commonBases,\n  headingsBases,\n  linkBases,\n  textBases,\n  codeBases,\n} from '@tinijs/ui';\n\nimport {IconsImportMethods} from '../consts/main';\nimport {mainStore} from '../stores/main';\n\nimport {AppSectionComponent} from './section';\nimport {AppTabsComponent, TabItem} from './tabs';\nimport {AppCodeComponent} from './code';\nimport {AppModalComponent} from './modal';\nimport {AppIconPageContentComponent} from './icon-page-content';\n\nexport type IconDef = [string, string];\n\nexport const APP_ICON_MODAL = 'app-icon-modal';\n@Component({\n  components: [\n    AppSectionComponent,\n    AppTabsComponent,\n    AppCodeComponent,\n    AppModalComponent,\n    AppIconPageContentComponent,\n  ],\n  theming: {\n    styling: stylingWithBases([\n      commonBases,\n      headingsBases,\n      linkBases,\n      textBases,\n      codeBases,\n    ]),\n  },\n})\nexport class AppIconModalComponent extends TiniComponent {\n  static readonly defaultTagName = APP_ICON_MODAL;\n\n  private readonly ICONS_IMPORT_TAB_ITEMS: TabItem[] = [\n    {name: IconsImportMethods.Tini},\n    {name: IconsImportMethods.Others},\n    {name: IconsImportMethods.Standalone},\n    {name: IconsImportMethods.DataURI},\n    {name: IconsImportMethods.SVG},\n    {name: IconsImportMethods.URL},\n  ];\n\n  private readonly PREPROCESS_CODE = (code: string, context: any) =>\n    !context ? code : code.replace(/tini-icon/g, context.nameTag);\n\n  @Input({type: String}) declare packageName?: string;\n  @Input({type: String}) declare packageVersion?: string;\n  @Input({type: Boolean}) declare noVariants?: boolean;\n  @Input({type: Object}) declare iconDef?: IconDef;\n\n  private modalRef: Ref<AppModalComponent> = createRef();\n  private contentValues: Record<string, string> = {};\n\n  private extractContentValues(def: IconDef) {\n    const [fileName, base64Content] = def;\n    const nameArr = fileName.split('.');\n    const ext = nameArr.pop() as string;\n    const iconName = nameArr.join('.').replace(/\\./g, '-');\n    const nameCapitalized = iconName\n      .split('-')\n      .map(item => item.charAt(0).toUpperCase() + item.slice(1))\n      .join('');\n    const nameVar = `icon${nameCapitalized}`;\n    const nameTag = `icon-${iconName}`;\n    const nameClass = `Icon${nameCapitalized}Component`;\n    const packName = this.packageName || '@tinijs/ui-icons';\n    const packageVersion = this.packageVersion || 'latest';\n    const mimeType = {\n      svg: 'image/svg+xml',\n      webp: 'image/webp',\n      png: 'image/png',\n      jpg: 'image/jpeg',\n    }[ext];\n\n    const iconSRC = `data:${mimeType};base64,${base64Content}`;\n\n    const tiniJSCode = `import {Component} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${packName}';\n\n@Component({\n  components: [\n    ${nameClass}, // 2. register the component\n  ]\n});\nexport class MyComponent extends TiniComponent {}`;\n\n    const othersCode = `/*\n * Option I: include in your component\n */\nimport '${packName}/${iconName}.include';\n\n/*\n * Option II: import as a shared bundle (if your bundler supports it)\n */\nimport {useComponents} from '@tinijs/core';\n\n// 1. import the component\nimport {${nameClass}} from '${packName}';\n\nuseComponents([\n  ${nameClass}, // 2. register the component\n]);\n`;\n\n    const standaloneCode = `<script src=\"https://unpkg.com/${packName}@${packageVersion}/${iconName}.bundle.js\"></script>`;\n\n    const dataURICode = `import {html} from 'lit';\n\n// 1. import the data URI\nimport {dataURI as ${nameVar}URI} from '${packName}/${iconName}.source';\n\n// 2. use it as background image or image src\nhtml\\`\n  <i style=\"background-image: url(\\$\\{${nameVar}URI\\})\"></i>\n  <img src=\\$\\{${nameVar}URI\\} />\n\\`;\n`;\n\n    const svgCode = `import {html} from 'lit';\nimport {unsafeSVG} from 'lit/directives/unsafe-svg.js';\n\n// 1. import the code\nimport {code as ${nameVar}Code} from '${packName}/${iconName}.source';\n\n// 2a. render\nhtml\\`<div class=\"container\">\\$\\{unsafeSVG(${nameVar}Code)\\}</div>\\`;\n\n// 2b. or inject\ncontainerEl.innerHTML = ${nameVar}Code;\n`;\n    const svgPreviewCode = window.atob(base64Content);\n\n    const urlCode = `<img ${'src'}=\"https://unpkg.com/${packName}@${packageVersion}/${iconName}.svg\" />`;\n\n    return {\n      iconSRC,\n      tiniJSCode,\n      othersCode,\n      standaloneCode,\n      dataURICode,\n      svgCode,\n      svgPreviewCode,\n      urlCode,\n      names: {\n        nameTag,\n      },\n    };\n  }\n\n  onChanges() {\n    this.contentValues = !this.iconDef\n      ? ({} as any)\n      : this.extractContentValues(this.iconDef);\n  }\n\n  show() {\n    this.modalRef.value?.show();\n  }\n\n  private hideModal() {\n    this.modalRef.value?.hide();\n    this.iconDef = undefined;\n  }\n\n  protected render() {\n    const {\n      iconSRC,\n      tiniJSCode,\n      othersCode,\n      standaloneCode,\n      dataURICode,\n      svgCode,\n      svgPreviewCode,\n      urlCode,\n      names,\n    } = this.contentValues;\n    return html`\n      <app-modal\n        ${ref(this.modalRef)}\n        .titleText=${this.iconDef?.[0]}\n        .backdropClosed=${true}\n        @no=${this.hideModal}\n      >\n        ${!this.iconDef\n          ? nothing\n          : html`\n              <div class=\"modal-body\">\n                <app-section .noUsageTabs=${true} style=\"margin-top: 1rem;\">\n                  <div slot=\"content\" class=\"imports\">\n                    <h2 style=\"margin-top: 0;\">Imports</h2>\n                    <p>\n                      After installing the respective icons pack, you can import\n                      and use the component, data URI, SVG code or URL anywhere\n                      in your project:\n                    </p>\n\n                    <app-tabs\n                      .tabItems=${this.ICONS_IMPORT_TAB_ITEMS}\n                      .activeName=${mainStore.referIconsImport}\n                      @change=${({detail}: CustomEvent<{name: string}>) =>\n                        mainStore.commit('referIconsImport', detail.name)}\n                    >\n                      <div data-tab=${IconsImportMethods.Tini}>\n                        <p>For the Tini framework.</p>\n                        <app-code .code=${tiniJSCode}></app-code>\n                      </div>\n\n                      <div data-tab=${IconsImportMethods.Others}>\n                        <p>For Vue, React, Angular, Svelte, ...</p>\n                        <app-code .code=${othersCode}></app-code>\n                      </div>\n\n                      <div data-tab=${IconsImportMethods.Standalone}>\n                        <p>\n                          Include the standalone version in any HTML page from a\n                          public CDN:\n                        </p>\n                        <app-code .code=${standaloneCode}></app-code>\n                        <p>\n                          <strong>Note that</strong>: this method is\n                          <em>not recommended</em> because the standalone\n                          component is usually bigger in size compares to the\n                          TS/ESM version.\n                        </p>\n                      </div>\n\n                      <div data-tab=${IconsImportMethods.DataURI}>\n                        <p>Use the data URI</p>\n                        <app-code .code=${dataURICode}></app-code>\n                      </div>\n\n                      <div data-tab=${IconsImportMethods.SVG}>\n                        <p>Use the code (SVG icons only).</p>\n                        <p>\n                          SVG codes built using the\n                          <a\n                            href=\"https://github.com/tinijs/cli\"\n                            target=\"_blank\"\n                            >official CLI</a\n                          >\n                          are <strong>sanitized</strong> and\n                          <strong>optimized</strong>, please always review the\n                          code before inject into your HTML.\n                        </p>\n                        <app-code .code=${svgCode}></app-code>\n                        <p>For security review and direct copy.</p>\n                        <app-code .code=${svgPreviewCode}></app-code>\n                      </div>\n\n                      <div data-tab=${IconsImportMethods.URL}>\n                        <p>Use the direct link.</p>\n                        <app-code .code=${urlCode}></app-code>\n                      </div>\n                    </app-tabs>\n                  </div>\n                </app-section>\n\n                <app-icon-page-content\n                  .src=${iconSRC}\n                  .preprocessCode=${this.PREPROCESS_CODE}\n                  .codeBuildContext=${names}\n                  ?noVariants=${this.noVariants}\n                ></app-icon-page-content>\n              </div>\n            `}\n      </app-modal>\n    `;\n  }\n\n  static styles = css`.modal-body{display:block;width:100%;padding:0 2rem}.modal-body app-icon-page-content{padding-bottom:3rem}`;\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","$a2893b34c64640f9$export$fd425e0b26216597","$l73V3","$5B3HT","$aPFYP","$5GozN","$dJr09","$iDR9r","$cRCDF","TiniComponent","_","defaultTagName","buildUrl","fileName","base64Content","fileExt","split","pop","svg","webp","png","jpg","onCreate","data","packageName","totalPages","Math","ceil","items","length","SIZE","onChanges","installCode","buildInstallCode","changelogsUrl","buildChangelogsUrl","currentPage","query","filterQuery","trim","toLowerCase","displayedItems","filter","name","includes","slice","ICONS_REPO_URL","showModal","def","modalRef","value","iconDef","show","render","html","titleText","version","homepage","nothing","Number","target","repeat","ref","noVariants","_1","styles","css","constructor","args","Configurable","getOption","createRef","__decorate","Input","type","String","prototype","Boolean","Reactive","Component","components","AppCodeComponent","AppIconModalComponent","theming","styling","stylingWithBases","commonBases","headingsBases","linkBases","textBases","buttonBases","codeBases","formBases","$a93d329b864140c8$export$d9e41647c6d39b4e","$ZHozn","$fWxFe","$8L1cM","$90HH7","$pUtW5","$3o4bj","extractContentValues","nameArr","ext","iconName","join","replace","nameCapitalized","map","item","charAt","toUpperCase","nameVar","nameTag","nameClass","packName","packageVersion","iconSRC","tiniJSCode","othersCode","standaloneCode","dataURICode","svgCode","svgPreviewCode","atob","urlCode","names","contentValues","hideModal","hide","undefined","ICONS_IMPORT_TAB_ITEMS","mainStore","referIconsImport","detail","commit","IconsImportMethods","Tini","Others","Standalone","DataURI","SVG","URL","PREPROCESS_CODE","code","context","AppSectionComponent","AppTabsComponent","AppModalComponent","AppIconPageContentComponent"],"version":3,"file":"bootstrap.9f4ee8cd.js.map"}